<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stickleft</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Variables
hsp = 0;
vsp = 0;
grav = 0.2;
jumpspeed = 6;
movespeed = 4;
jumps = 0;
jumpsmax = 2;
key_down = 0;




if (global.checkpointR == room)
{
    x = global.checkpointx;
    y = global.checkpointy;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Controls
key_right = keyboard_check(vk_right);
key_left = -keyboard_check(vk_left);
key_jump = keyboard_check_pressed(vk_up);
key_down = keyboard_check(vk_down);


move = key_left + key_right;
hsp = move * movespeed
if (vsp &lt; 10) vsp += grav;
if (place_meeting(x,y+1,obj_wall))
{
  jumps = jumpsmax;
}
if (key_jump) &amp;&amp; jumps&gt;0 {
    jumps -= 1;
    vsp = -jumpspeed;
    audio_play_sound(snd_jump,0,false);
    if (jumps = 1) sprite_index = spr_jump2;
}

if (place_meeting(x,y+1,obj_wall)){
if(sign(hsp) = -1) sprite_index = spr_stickwleft
if(sign(hsp) = 1) sprite_index = spr_stickwright
if(hsp = 0){
  if (keyboard_check_released(vk_left)) sprite_index = spr_stickleft;
  if (keyboard_check_released(vk_right)) sprite_index = spr_stickright;
}
}
if (keyboard_check_pressed(vk_up)) sprite_index = spr_ljump;
if (!place_meeting(x,y+1,obj_wall)){
  
  if (keyboard_check(vk_left)) sprite_index = spr_ljump;
  if (keyboard_check(vk_right)) sprite_index = spr_rjump;
  if (jumps = 0) sprite_index = spr_jump2;
    
    
}


if(place_meeting(x+hsp,y,obj_wall)){
  while(!place_meeting(x+sign(hsp),y,obj_wall)){
  x += sign(hsp)
  }
  hsp = 0;
}
x += hsp;
if(place_meeting(x,y+vsp,obj_wall)){
  while(!place_meeting(x,y+sign(vsp),obj_wall)){
  y += sign(vsp)
  }
  vsp = 0;
}
y += vsp;



/*
inst  = instance_nearest(x,y,obj_wall)
if inst != noone 
{
    inst.visible = true;
}

*/

with (obj_wall)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false
    }
    
}
with (obj_enemy)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false
    }
    
}

with (obj_checkpoint)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false
    }
    
}
with (obj_key)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false
    }
    
}
with (obj_door)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false
    }
    
}
with (obj_spike)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false
    }
    
}

with (obj_lava)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else if(room == rm_7||room == rm_8||room == rm_9){
    visible = true;
    }
    else{
    visible = false;
    }   
}


with (obj_fireenemy)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false;
    }
    
}
with (obj_fakewall)
{
    if (point_distance(x,y,other.x,other.y) &lt; 100)
    {
      visible = true;   
        
    }
    else{
     visible = false
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death Sound
//sound_volume(snd_death,0);
//sound_volume(global.Music,0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_fireenemy">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_death</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lava">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_death</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spike">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>snd_death</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_door">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
    if (instance_number(obj_key) = 0)
    {
        room_goto_next();
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_key">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with(obj_key)
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>203</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_kill_object</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_death();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
